/**
 * Given a CSS statement, return the string before the block.
 * For rules, this is the selector list (and surrounding whitespace).
 * For at-rules, this is the name and params (and surrounding whitespace).
 *
 * If there is no block, return undefined.
 *
 * @param {Rule|AtRule} statement - postcss rule or at-rule node
 * @param {object} options
 * @param {boolean} [options.noBefore] - Leave out the `before` string
 * @return {string|undefined}
 */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = function (statement) {
  var _ref = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  var noBefore = _ref.noBefore;

  var result = "";
  if (statement.type !== "rule" && statement.type !== "atrule") {
    return result;
  }

  if (!noBefore) {
    result += statement.raw("before");
  }
  if (statement.type === "rule") {
    result += statement.selector;
  } else {
    result += "@" + statement.name + statement.raw("afterName") + statement.params;
  }
  result += statement.raw("between");
  return result;
};

module.exports = exports["default"];