/**
 * Given an object of violation messages, return another
 * that provides the same messages but also indicating
 * which rule is being violated.
 *
 * @param {string} ruleName
 * @param {object} messages - Object whose keys are message identifiers
 *   and values are either message strings or functions that return message strings
 * @return {object} New message object, whose messages will be marked with the rule name
 */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports["default"] = function (ruleName, messages) {
  return Object.keys(messages).reduce(function (newMessages, messageId) {
    var messageText = messages[messageId];
    newMessages[messageId] = typeof messageText === "string" ? messageText + " (" + ruleName + ")" : function () {
      return messageText.apply(undefined, arguments) + " (" + ruleName + ")";
    };
    return newMessages;
  }, {});
};

module.exports = exports["default"];